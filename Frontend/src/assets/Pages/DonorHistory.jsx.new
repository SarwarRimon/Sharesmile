import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { useAuth } from '../Context/AuthContext';
import { toast } from 'react-hot-toast';

const DonorHistory = () => {
    const [donations, setDonations] = useState([]);
    const [loading, setLoading] = useState(true);
    const [filter, setFilter] = useState('all');
    const { token } = useAuth();

    useEffect(() => {
        fetchDonations();
    }, [token]);

    const fetchDonations = async () => {
        try {
            const response = await axios.get('http://localhost:5000/api/donations/donor-history', {
                headers: { Authorization: `Bearer ${token}` }
            });
            setDonations(response.data);
        } catch (error) {
            console.error('Error fetching donations:', error);
            toast.error('Failed to load donation history');
        } finally {
            setLoading(false);
        }
    };

    const filteredDonations = donations.filter(donation => {
        if (filter === 'all') return true;
        return donation.status === filter;
    });

    const getStatusColor = (status) => {
        switch (status) {
            case 'approved':
                return 'bg-green-100 text-green-800';
            case 'pending':
                return 'bg-yellow-100 text-yellow-800';
            case 'rejected':
                return 'bg-red-100 text-red-800';
            default:
                return 'bg-gray-100 text-gray-800';
        }
    };

    if (loading) {
        return (
            <div className="min-h-screen flex items-center justify-center">
                <div className="animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-purple-600"></div>
            </div>
        );
    }

    return (
        <div className="min-h-screen bg-gray-50 pt-20 pb-10 px-4 sm:px-6 lg:px-8">
            <div className="max-w-6xl mx-auto">
                <div className="mb-8">
                    <h1 className="text-3xl font-bold text-gray-900">My Donation History</h1>
                    <p className="mt-2 text-gray-600">Track all your contributions and their status</p>
                </div>

                {/* Filter Tabs */}
                <div className="mb-6">
                    <div className="border-b border-gray-200">
                        <nav className="-mb-px flex space-x-8" aria-label="Tabs">
                            {['all', 'pending', 'approved', 'rejected'].map((status) => (
                                <button
                                    key={status}
                                    onClick={() => setFilter(status)}
                                    className={`
                                        ${filter === status
                                            ? 'border-purple-500 text-purple-600'
                                            : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                                        }
                                        whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm capitalize
                                    `}
                                >
                                    {status}
                                </button>
                            ))}
                        </nav>
                    </div>
                </div>

                {/* Donations List */}
                <div className="space-y-6">
                    {filteredDonations.length > 0 ? (
                        filteredDonations.map((donation) => (
                            <div
                                key={donation.id}
                                className="bg-white rounded-lg shadow-sm border border-gray-200 p-6 transition duration-150 hover:shadow-md"
                            >
                                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                                    <div>
                                        <p className="text-sm text-gray-500">Campaign</p>
                                        <p className="font-medium text-gray-900">{donation.campaign_title}</p>
                                    </div>
                                    <div>
                                        <p className="text-sm text-gray-500">Amount</p>
                                        <p className="font-medium text-gray-900">à§³{donation.amount}</p>
                                    </div>
                                    <div>
                                        <p className="text-sm text-gray-500">Payment Method</p>
                                        <p className="font-medium text-gray-900">{donation.payment_method}</p>
                                    </div>
                                    <div>
                                        <p className="text-sm text-gray-500">Status</p>
                                        <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(donation.status)}`}>
                                            {donation.status.charAt(0).toUpperCase() + donation.status.slice(1)}
                                        </span>
                                    </div>
                                </div>

                                <div className="mt-4 border-t border-gray-100 pt-4">
                                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                                        <div>
                                            <p className="text-sm text-gray-500">Transaction ID</p>
                                            <p className="font-medium text-gray-900">{donation.transaction_id}</p>
                                        </div>
                                        <div>
                                            <p className="text-sm text-gray-500">Date</p>
                                            <p className="font-medium text-gray-900">
                                                {new Date(donation.created_at).toLocaleDateString('en-US', {
                                                    year: 'numeric',
                                                    month: 'long',
                                                    day: 'numeric',
                                                    hour: '2-digit',
                                                    minute: '2-digit'
                                                })}
                                            </p>
                                        </div>
                                    </div>
                                </div>

                                {donation.rejection_reason && donation.status === 'rejected' && (
                                    <div className="mt-4 bg-red-50 border border-red-200 rounded-md p-4">
                                        <p className="text-sm text-red-700">
                                            <span className="font-semibold">Rejection Reason:</span> {donation.rejection_reason}
                                        </p>
                                    </div>
                                )}
                            </div>
                        ))
                    ) : (
                        <div className="text-center py-12 bg-white rounded-lg shadow-sm border border-gray-200">
                            <svg
                                className="mx-auto h-12 w-12 text-gray-400"
                                fill="none"
                                viewBox="0 0 24 24"
                                stroke="currentColor"
                                aria-hidden="true"
                            >
                                <path
                                    strokeLinecap="round"
                                    strokeLinejoin="round"
                                    strokeWidth="2"
                                    d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                                />
                            </svg>
                            <h3 className="mt-2 text-sm font-medium text-gray-900">No donations found</h3>
                            <p className="mt-1 text-sm text-gray-500">
                                {filter === 'all'
                                    ? "You haven't made any donations yet"
                                    : `No ${filter} donations found`}
                            </p>
                        </div>
                    )}
                </div>
            </div>
        </div>
    );
};

export default DonorHistory;
